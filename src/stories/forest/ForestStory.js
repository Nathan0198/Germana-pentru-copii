/**
 * undefined Story Module
 * Continuă în pădurea magică cu noi prieteni!
 * 
 * Generated by MiniDeutsch Story CLI Tool
 * Author: MiniDeutsch Team
 */

import { BaseStory } from '../../services/story/BaseStory';

export class Story extends BaseStory {
  constructor() {
    super();
  }

  /**
   * Initialize story with data
   */
  async customInitialize() {
    const storyData = {
      metadata: {
        id: 'undefined',
        name: 'undefined',
        title: 'undefined',
        subtitle: 'Lecțiile 1-25',
        description: 'Continuă în pădurea magică cu noi prieteni!',
        version: '1.0.0',
        author: 'MiniDeutsch Team',
        difficulty: 'beginner',
        tags: ['german', 'learning', 'beginner'],
        dependencies: ["castle"],
        language: 'german',
        targetAge: { min: 4, max: 10 }
      },
      
      lessons: this.generateLessons(),
      characters: this.generateCharacters(),
      theme: this.generateTheme(),
      unlockRequirements: this.generateUnlockRequirements(),
      rewards: this.generateRewards()
    };

    await this.initializeWithData(storyData);
  }

  /**
   * Generate lessons for this story
   * @returns {Array} Array of lesson objects
   */
  generateLessons() {
    const lessons = [];
    const baseId = this.getLessonIdOffset();
    
    for (let i = 1; i <= 25; i++) {
      lessons.push({
        id: baseId + i,
        title: `Lecția ${i}`,
        subtitle: `Subtitle pentru lecția ${i}`,
        duration: 5,
        
        story: {
          narrator: 'main_character',
          scenes: [
            {
              character: 'main_character',
              german: `German text for lesson ${i}`,
              romanian: `Textul românesc pentru lecția ${i}`,
              image: `undefined_lesson_${i}_scene_1`
            }
          ]
        },

        vocabulary: [
          // Add vocabulary words here
        ],

        games: [
          {
            type: 'drag_drop',
            instructor: 'main_character',
            title: 'Conectează cuvintele',
            items: []
          }
        ],

        unlock_requirements: {
          lesson_completed: i > 1 ? (baseId + i - 1) : null
        }
      });
    }
    
    return lessons;
  }

  /**
   * Generate characters for this story
   */
  generateCharacters() {
    return [
      {
        id: 'main_character',
        name: 'Main Character',
        emoji: '🐻',
        role: 'narrator',
        description: 'The main character of this story',
        voice_profile: 'warm_friendly'
      }
      // Add more characters here
    ];
  }

  /**
   * Generate theme configuration
   */
  generateTheme() {
    return {
      color: '#228B22',
      backgroundColor: '#F5F5DC',
      textColor: '#333',
      accentColor: '#FFD700',
      images: {
        background: `${this.metadata.id}_background`
      },
      sounds: {
        background_music: `${this.metadata.id}_bg_music`
      }
    };
  }

  /**
   * Generate unlock requirements
   */
  generateUnlockRequirements() {
    const requirements = {};
    
    if (true) {
      requirements.requiredStories = ["castle"];
    }
    
    return requirements;
  }

  /**
   * Generate rewards for story completion
   */
  generateRewards() {
    return {
      points: 500,
      badges: [
        {
          id: `${this.metadata.id}_master`,
          name: `Maestrul ${this.metadata.title}`,
          description: `Completează toate lecțiile din ${this.metadata.title}`,
          icon: '👑'
        }
      ]
    };
  }

  /**
   * Get lesson ID offset
   */
  getLessonIdOffset() {
    const storyOffsets = {
      'castle': 0,
      'forest': 25,
      'village': 50,
      'city': 75,
      'ocean': 100,
      'mountains': 125,
      'space': 150,
      'magic': 175
    };
    
    return storyOffsets['undefined'] || 0;
  }
}

export default Story;
